## Feature Configuration

# Using tf.feature_column in TensorFlow.
# see https://www.tensorflow.org/api_docs/python/tf/feature_column

# Each feature consists 3 attributes `type`, `transform`, `parameter`.
# 1. feature: feature name required, must in schema.yaml.
# 2. type: required, feature type, `category` or `continuous`.
# 3. transform: feature transform.
# 4. parameter: main parameter for transform.
#    (1) type: category
#         transform: `hash_bucket` or `vocab` or `identity`.
#           hash_bucket  ==> tf.feature.categorical_column_with_hash_bucket
#           vocab        ==> tf.feature.categorical_column_with_vocabulary_list
#           identity     ==> tf. feature.categorical_column_with_identity
#         parameter: examples as follows,
#           1000            (hash_bucket_size  for `hash_bucket`)
#           ['a', 'b', 'c'] (vocabulary_list for `vocab`)
#           15              (num_buckets  for `identity`)
#    (2) type: continuous
#         transform: `min_max`, `log`, `standard` normalization for normalizer_fn in
#                    tf.feature_column.numeric_column, set empty to not do normalization.
#           `min_max`    ==> x = (x-min) / (x-max);
#           `log`        ==> x = log(x), all feature values must >= 1
#           `standard`   ==> x = (x-mean) / std
#
#         parameter:
#           normalization: [min, max] or [mean, std] list for `min_max` or `standard`; set empty for `log`.
#           boundaries: optional, set boundaries, eg: [5, 10, 15, 20] for `discretize`
#                       (bucketized continuous feature for wide input or as cross feature),
#                       set empty for not use continuous feature for wide input.
# Set unused features by using symbol `#` ahead of the lines.
# Category features with hash_bucket using embedding_column to feed deep, others by indicator_column.
# All listed features are used in model.


# Q & A about hash_bucket_size:
# If category size=1000, how much should hash_bucket_size be ?
#   An interesting discovery is that randomly chose N number a_i between 1~N, i=1,...N
#     let b_i = a_i % N, the distinct b_i from all N number is about 0.633.
#     in other words, a random hash func chose N as hash_bucket_size collision rate is 0.633.
#   Recommend `hash_bucket_size` to be 2~3*category size.
#     larger `hash_bucket_size` require more memory and complexity, but smaller cause more collision
#   Here use the strategy that
#     for low sparsity category, set `hash_bucket_size` 3~4*category size to reduce collision
#     for high sparsity category, set 1.5~2*category size to save memory.

# TODO: support all tf.feature_column.

  
due_amt:
  type: continuous
  transform: log
  parameter:
    boundaries: [0,2,4,6,8,10]

due_date_day:
  type: category
  transform: vocab
  parameter: ['01','02','03','04','05','06','07','08','09','10','11','12','13','14','15',
              '16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31']

due_date_weekday:
  type: category
  transform: vocab
  parameter: [0,1]

default_amt_max:
  type: continuous
  transform: log

default_amt_mean:
  type: continuous
  transform: log

default_amt_min:
  type: continuous
  transform: log

default_times:
  type: continuous
  transform: standard
  parameter:
    normalization: [0, 90]
    boundaries: [0, 1, 90]

default_times_pct:
  type: continuous
  transform: standard
  parameter:
    normalization: [0, 1]

first_prepay_due_amt_max:
  type: continuous
  transform: log

first_prepay_due_amt_mean:
  type: continuous
  transform: log

first_prepay_due_amt_min:
  type: continuous
  transform: log

first_prepay_days_max:
  type: category
  transform: vocab
  parameter: [-1,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
              16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]

first_prepay_days_mean:
  type: continuous
  transform: standard
  parameter:
    normalization: [-1, 31]

first_prepay_days_min:
  type: category
  transform: vocab
  parameter: [-1,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
              16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]

first_prepay_days_mode:
  type: category
  transform: vocab
  parameter: [-1,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
              16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]

max_continue_repay_times_once:
  type: continuous
  transform: standard
  parameter:
    normalization: [0, 12]
    boundaries: [0,2,4,6,8,10,12]

mean_coninue_repay_times_once:
  type: continuous
  transform: standard
  parameter:
    normalization: [0, 12]
    boundaries: [0,2,12]

normal_amt_max:
  type: continuous
  transform: log

normal_amt_mean:
  type: continuous
  transform: log


normal_amt_min:
  type: continuous
  transform: log

normal_times:
  type: continuous
  transform: standard
  parameter:
    normalization: [0, 130]
    boundaries: [0, 20,40, 130]

normal_times_pct:
  type: continuous
  transform: standard
  parameter:
    normalization: [0, 1]

weighted_amt_max:
  type: continuous
  transform: log

weighted_amt_min:
  type: continuous
  transform: log

prepay_days_max:
  type: category
  transform: vocab
  parameter: [-1,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
              16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]

prepay_days_mode:
  type: category
  transform: vocab
  parameter: [-1,  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
              16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31]

prepay_days_mean:
  type: continuous
  transform: standard
  parameter:
    normalization: [-1, 31]

prepay_time:
  type: continuous
  transform: log

prepay_time_pct:
  type: continuous
  transform: standard
  parameter:
    normalization: [0, 1]

max_month_diff:
  type: category
  transform: vocab
  parameter: [0,1]

gender:
  type: category
  transform: vocab
  parameter: ['男','女']

age:
  type: continuous
  transform: min_max
  parameter:
    normalization: [18, 60]
    boundaries:  [18,25,30,35,40,45,50,55,60]

cell_province:
  type: category
  transform: hash_bucket
  parameter: 100

id_province:
  type: category
  transform: hash_bucket
  parameter: 100

id_city:
  type: category
  transform: hash_bucket
  parameter: 1000

max_interval:
  type: category
  transform: hash_bucket
  parameter: 50


reg_interval:
  type: continuous
  transform: min_max
  parameter:
    normalization: [-1,140]
    boundaries: [-1,10,20,30,40,50,60,140]

cell_change:
  type: category
  transform: vocab
  parameter: [0,1]

listing_num_12m:
  type: continuous
  transform: log

listing_num_24m:
  type: continuous
  transform: log

listing_num_6m:
  type: continuous
  transform: log

max_interset_per_12m:
  type: continuous
  transform: log

max_interset_per_24m:
  type: continuous
  transform: log

max_interset_per_6m:
  type: continuous
  transform: log

max_listing_per_day_12m:
  type: category
  transform: hash_bucket
  parameter: 30

max_listing_per_day_24m:
  type: category
  transform: hash_bucket
  parameter: 30

max_principal_12m:
  type: continuous
  transform: log

max_principal_24m:
  type: continuous
  transform: log

max_principal_6m:
  type: continuous
  transform: log

max_rate_12m:
  type: category
  transform: hash_bucket
  parameter: 30

max_rate_24m:
  type: category
  transform: hash_bucket
  parameter: 20

max_rate_6m:
  type: category
  transform: hash_bucket
  parameter: 30

max_term_12m:
  type: category
  transform: hash_bucket
  parameter: 30

max_term_6m:
  type: category
  transform: hash_bucket
  parameter: 24

mean_interset_per_12m:
  type: continuous
  transform: log

mean_interset_per_24m:
  type: continuous
  transform: log

mean_interset_per_6m:
  type: continuous
  transform: log

mean_principal_12m:
  type: continuous
  transform: log

mean_principal_24m:
  type: continuous
  transform: log

mean_principal_6m:
  type: continuous
  transform: log

mean_rate_12m:
  type: continuous
  transform: standard
  parameter:
    normalization: [0, 10]

mean_rate_24m:
  type: continuous
  transform: standard
  parameter:
    normalization: [0, 10]

mean_rate_6m:
  type: continuous
  transform: standard
  parameter:
    normalization: [0, 10]

mean_term_12m:
  type: continuous
  transform: standard
  parameter:
    normalization: [0, 12]

mean_term_24m:
  type: continuous
  transform: standard
  parameter:
    normalization: [0, 12]

mean_term_6m:
  type: continuous
  transform: standard
  parameter:
    normalization: [0, 12]

min_interset_per_12m:
  type: continuous
  transform: log

min_interset_per_24m:
  type: continuous
  transform: log

min_interset_per_6m:
  type: continuous
  transform: log

min_principal_12m:
  type: continuous
  transform: log

min_principal_24m:
  type: continuous
  transform: log

min_principal_6m:
  type: continuous
  transform: log

min_rate_12m:
  type: category
  transform: hash_bucket
  parameter: 20

min_rate_24m:
  type: category
  transform: hash_bucket
  parameter: 20

min_rate_6m:
  type: category
  transform: hash_bucket
  parameter: 30

min_term_12m:
  type: category
  transform: hash_bucket
  parameter: 15

min_term_24m:
  type: category
  transform: hash_bucket
  parameter: 15

min_term_6m:
  type: category
  transform: hash_bucket
  parameter: 15

sum_interset_per_12m:
  type: continuous
  transform: log

sum_interset_per_24m:
  type: continuous
  transform: log

sum_interset_per_6m:
  type: continuous
  transform: log

sum_principal_12m:
  type: continuous
  transform: log

sum_principal_24m:
  type: continuous
  transform: log

sum_principal_6m:
  type: continuous
  transform: log

last_1_bhmonth_type1_cnt:
  type: continuous
  transform: log

last_1_bhmonth_type1_dawn_click_pct:
  type: continuous
  transform: standard
  parameter:
    normalization: [0, 1]

last_1_bhmonth_type1_max_click_cnt_day:
  type: continuous
  transform: log

last_1_bhmonth_type1_max_cnt_day:
  type: continuous
  transform: log

last_1_bhmonth_type1_max_cnt_day_dawn:
  type: continuous
  transform: log

last_1_bhmonth_type1_max_cnt_hour:
  type: continuous
  transform: log

last_1_bhmonth_type1_mean_cnt_day:
  type: continuous
  transform: log

last_1_bhmonth_type1_mean_cnt_day_dawn:
  type: continuous
  transform: log

last_1_bhmonth_type1_mean_cnt_hour:
  type: continuous
  transform: log

last_1_bhmonth_type1_min_cnt_day:
  type: continuous
  transform: log

last_1_bhmonth_type1_std_cnt_day:
  type: continuous
  transform: log

last_1_bhmonth_type1_std_cnt_day_dawn:
  type: continuous
  transform: log

last_1_bhmonth_type1_std_cnt_hour:
  type: continuous
  transform: log

last_1_bhmonth_type23_cnt:
  type: continuous
  transform: log

last_1_bhmonth_type23_max_click_cnt_day:
  type: continuous
  transform: log

last_1_bhmonth_type23_dawn_click_pct:
  type: continuous
  transform: standard
  parameter:
    normalization: [0, 1]

last_1_bhmonth_type23_max_cnt_day:
  type: continuous
  transform: log

last_1_bhmonth_type23_max_cnt_day_dawn:
  type: continuous
  transform: log

last_1_bhmonth_type23_max_cnt_hour:
  type: continuous
  transform: log

last_1_bhmonth_type23_mean_cnt_day:
  type: continuous
  transform: log

last_1_bhmonth_type23_mean_cnt_day_dawn:
  type: continuous
  transform: log

last_1_bhmonth_type23_mean_cnt_hour:
  type: continuous
  transform: log

last_1_bhmonth_type23_min_cnt_day:
  type: continuous
  transform: log

last_1_bhmonth_type23_std_cnt_day:
  type: continuous
  transform: log

last_1_bhmonth_type23_std_cnt_day_dawn:
  type: continuous
  transform: log

last_1_bhmonth_type23_std_cnt_hour:
  type: continuous
  transform: log

last_3_bhmonth_type1_cnt:
  type: continuous
  transform: log

last_3_bhmonth_type1_dawn_click_pct:
  type: continuous
  transform: standard
  parameter:
    normalization: [0, 1]

last_3_bhmonth_type1_max_click_cnt_day:
  type: continuous
  transform: log

last_3_bhmonth_type1_max_cnt_day:
  type: continuous
  transform: log

last_3_bhmonth_type1_max_cnt_day_dawn:
  type: continuous
  transform: log

last_3_bhmonth_type1_max_cnt_hour:
  type: continuous
  transform: log

last_3_bhmonth_type1_mean_cnt_day:
  type: continuous
  transform: log

last_3_bhmonth_type1_mean_cnt_day_dawn:
  type: continuous
  transform: log

last_3_bhmonth_type1_mean_cnt_hour:
  type: continuous
  transform: log

last_3_bhmonth_type1_min_cnt_day:
  type: continuous
  transform: log

last_3_bhmonth_type1_std_cnt_day:
  type: continuous
  transform: log

last_3_bhmonth_type1_std_cnt_day_dawn:
  type: continuous
  transform: log

last_3_bhmonth_type1_std_cnt_hour:
  type: continuous
  transform: log

last_3_bhmonth_type23_cnt:
  type: continuous
  transform: log

last_3_bhmonth_type23_max_click_cnt_day:
  type: continuous
  transform: log

last_3_bhmonth_type23_dawn_click_pct:
  type: continuous
  transform: standard
  parameter:
    normalization: [0, 1]

last_3_bhmonth_type23_max_cnt_day:
  type: continuous
  transform: log

last_3_bhmonth_type23_max_cnt_day_dawn:
  type: continuous
  transform: log

last_3_bhmonth_type23_max_cnt_hour:
  type: continuous
  transform: log

last_3_bhmonth_type23_mean_cnt_day:
  type: continuous
  transform: log

last_3_bhmonth_type23_mean_cnt_day_dawn:
  type: continuous
  transform: log

last_3_bhmonth_type23_mean_cnt_hour:
  type: continuous
  transform: log

last_3_bhmonth_type23_min_cnt_day:
  type: continuous
  transform: log

last_3_bhmonth_type23_std_cnt_day:
  type: continuous
  transform: log

last_3_bhmonth_type23_std_cnt_day_dawn:
  type: continuous
  transform: log

last_3_bhmonth_type23_std_cnt_hour:
  type: continuous
  transform: log

last_6_bhmonth_type1_cnt:
  type: continuous
  transform: log

last_6_bhmonth_type1_dawn_click_pct:
  type: continuous
  transform: standard
  parameter:
    normalization: [0, 1]

last_6_bhmonth_type1_max_click_cnt_day:
  type: continuous
  transform: log

last_6_bhmonth_type1_max_cnt_day:
  type: continuous
  transform: log

last_6_bhmonth_type1_max_cnt_day_dawn:
  type: continuous
  transform: log

last_6_bhmonth_type1_max_cnt_hour:
  type: continuous
  transform: log

last_6_bhmonth_type1_mean_cnt_day:
  type: continuous
  transform: log

last_6_bhmonth_type1_mean_cnt_day_dawn:
  type: continuous
  transform: log

last_6_bhmonth_type1_mean_cnt_hour:
  type: continuous
  transform: log

last_6_bhmonth_type1_min_cnt_day:
  type: continuous
  transform: log

last_6_bhmonth_type1_std_cnt_day:
  type: continuous
  transform: log

last_6_bhmonth_type1_std_cnt_day_dawn:
  type: continuous
  transform: log

last_6_bhmonth_type1_std_cnt_hour:
  type: continuous
  transform: log

last_6_bhmonth_type23_cnt:
  type: continuous
  transform: log

last_6_bhmonth_type23_dawn_click_pct:
  type: continuous
  transform: standard
  parameter:
    normalization: [0, 1]

last_6_bhmonth_type23_max_click_cnt_day:
  type: continuous
  transform: log

last_6_bhmonth_type23_max_cnt_day:
  type: continuous
  transform: log

last_6_bhmonth_type23_max_cnt_day_dawn:
  type: continuous
  transform: log

last_6_bhmonth_type23_max_cnt_hour:
  type: continuous
  transform: log

last_6_bhmonth_type23_mean_cnt_day:
  type: continuous
  transform: log

last_6_bhmonth_type23_mean_cnt_day_dawn:
  type: continuous
  transform: log

last_6_bhmonth_type23_mean_cnt_hour:
  type: continuous
  transform: log

last_6_bhmonth_type23_min_cnt_day:
  type: continuous
  transform: log

last_6_bhmonth_type23_std_cnt_day:
  type: continuous
  transform: log

last_6_bhmonth_type23_std_cnt_day_dawn:
  type: continuous
  transform: log

last_6_bhmonth_type23_std_cnt_hour:
  type: continuous
  transform: log

last_12_bhmonth_type1_cnt:
  type: continuous
  transform: log

last_12_bhmonth_type1_dawn_click_pct:
  type: continuous
  transform: standard
  parameter:
    normalization: [0, 1]

last_12_bhmonth_type1_max_click_cnt_day:
  type: continuous
  transform: log

last_12_bhmonth_type1_max_cnt_day:
  type: continuous
  transform: log

last_12_bhmonth_type1_max_cnt_day_dawn:
  type: continuous
  transform: log

last_12_bhmonth_type1_max_cnt_hour:
  type: continuous
  transform: log

last_12_bhmonth_type1_mean_cnt_day:
  type: continuous
  transform: log

last_12_bhmonth_type1_mean_cnt_day_dawn:
  type: continuous
  transform: log

last_12_bhmonth_type1_mean_cnt_hour:
  type: continuous
  transform: log

last_12_bhmonth_type1_min_cnt_day:
  type: continuous
  transform: log

last_12_bhmonth_type1_std_cnt_day:
  type: continuous
  transform: log

last_12_bhmonth_type1_std_cnt_day_dawn:
  type: continuous
  transform: log

last_12_bhmonth_type1_std_cnt_hour:
  type: continuous
  transform: log

last_12_bhmonth_type23_cnt:
  type: continuous
  transform: log

last_12_bhmonth_type23_dawn_click_pct:
  type: continuous
  transform: standard
  parameter:
    normalization: [0, 1]

last_12_bhmonth_type23_max_click_cnt_day:
  type: continuous
  transform: log

last_12_bhmonth_type23_max_cnt_day:
  type: continuous
  transform: log

last_12_bhmonth_type23_max_cnt_day_dawn:
  type: continuous
  transform: log

last_12_bhmonth_type23_max_cnt_hour:
  type: continuous
  transform: log

last_12_bhmonth_type23_mean_cnt_day:
  type: continuous
  transform: log

last_12_bhmonth_type23_mean_cnt_day_dawn:
  type: continuous
  transform: log

last_12_bhmonth_type23_mean_cnt_hour:
  type: continuous
  transform: log

last_12_bhmonth_type23_min_cnt_day:
  type: continuous
  transform: log

last_12_bhmonth_type23_std_cnt_day:
  type: continuous
  transform: log

last_12_bhmonth_type23_std_cnt_day_dawn:
  type: continuous
  transform: log

last_12_bhmonth_type23_std_cnt_hour:
  type: continuous
  transform: log

tag_cnt:
  type: category
  transform: hash_bucket
  parameter: 30

tag_list:
  type: category
  transform: hash_bucket
  parameter: 10000
